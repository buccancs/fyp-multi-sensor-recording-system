name: Performance Monitoring

on:
  schedule:
    # Run weekly on Saturdays at 4 AM UTC
    - cron: '0 4 * * 6'
  workflow_dispatch:

jobs:
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -r test-requirements.txt
    
    - name: Run performance tests
      run: |
        # Create benchmark output directory
        mkdir -p performance_reports
        
        # Run unified performance tests if available
        if [ -f "tests_unified/runners/run_unified_tests.py" ]; then
          echo "Running unified performance tests..."
          python tests_unified/runners/run_unified_tests.py --level performance --mode ci --output-format json > performance_results.json || echo "::warning::Some performance tests failed"
          
          # Also run specific benchmark tests
          python tests_unified/runners/run_unified_tests.py --category evaluation --performance-benchmarks --output-format json > benchmark.json || echo "::warning::Benchmark tests failed"
        else
          echo "::warning::Unified test framework not found, falling back to legacy performance tests"
          
          # Run legacy performance tests if they exist
          if [ -d "evaluation_suite/performance/" ]; then
            pytest evaluation_suite/performance/ -v --benchmark-only --benchmark-json=benchmark.json || echo "::warning::Some performance tests failed"
          else
            echo "::warning::Performance test directory not found, creating placeholder"
            echo '{"benchmarks": [], "datetime": "'$(date -u +"%Y-%m-%dT%H:%M:%S")'", "version": "1.0.0"}' > benchmark.json
          fi
        fi
    
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: performance-results
        path: |
          benchmark.json
          performance_results.json
          performance_reports/
          tests_unified/reports/performance/
        retention-days: 30